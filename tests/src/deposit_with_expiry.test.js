import { processTest } from "./test.fixture";

const rawTxHex = "0xf90195821f9a8505d21dba00830186a094d37bbe5744d730a1d98d8dc97c42f0ca46ad7146885bd5440154d96000b9012444bc937b000000000000000000000000a9ce88d2a853836e9da4886e6ac569c02b59d00300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005bd5440154d9600000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000063d0f1390000000000000000000000000000000000000000000000000000000000000047535741503a54484f522e52554e453a74686f72317432706673637571336374677466356833783770367a726a643765306a637675737a797674353a3539393437343533353938360000000000000000000000000000000000000000000000000026a0a3ec3ae3eaa5cf491893457301ff48c143aecfee490ab05e57ae9f1e66003308a042a440e56343d4a337723a5f1dd83324ba71688dc5eef42b0b10d5cbe07bad37"
const contractName = "THORChain Router v4"
const testLabel = "Deposit with Expiry"; // <= Name of the test
const testDirSuffix = "deposit_with_expiry"; // <= directory to compare device snapshots to
const testNetwork = "ethereum";

const signedPlugin = false;

const devices = [
  {
    name: "nanos",
    label: "Nano S",
    steps: 9 // <= Define the number of steps for this test case and this device
  },
  {
    name: "nanox",
    label: "Nano X",
    steps: 5 // <= Define the number of steps for this test case and this device
  }
];

devices.forEach((device) =>
  processTest(device, contractName, testLabel, testDirSuffix, rawTxHex, signedPlugin,"",testNetwork)
);
